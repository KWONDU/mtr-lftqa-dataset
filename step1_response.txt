[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: Find the names of users who did not leave any review.
SQL query: SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)
2th pair
question: Find the name of the user who gives the most reviews.
SQL query: SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1
3th pair
question: For each user, return the name and the average rating of reviews given by them.
SQL query: SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id
4th pair
question: For each user, find their name and the number of reviews written by them.
SQL query: SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id
5th pair
question: Find the name of the user who gave the highest rating.
SQL query: SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id ORDER BY T2.rating DESC LIMIT 1
6th pair
question: Find the names of users who did not leave any review.
SQL query: SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)
7th pair
question: Find the number of users who did not write any review.
SQL query: SELECT count(*) FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output
1. Based on user reviews, how can we identify users who have not left any reviews?
2. Which user has the highest number of reviews and what is their name?
3. How do the average ratings given by each user compare to one another?
4. What are the names of users who have written the most reviews, and how many reviews have they each written?
5. Who is the user with the highest rating, and what is their name?

==

[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: Show ids for all employees who don't have a certificate.
SQL query: SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate
2th pair
question: What are the ids of all employees that don't have certificates?
SQL query: SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate
3th pair
question: what is the salary and name of the employee who has the most number of aircraft certificates?
SQL query: SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1
4th pair
question: What is the salaray and name of the employee that is certified to fly the most planes?
SQL query: SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output
1. What are the characteristics of employees without certificates in terms of their IDs?
2. How can we identify employees who do not possess certificates based on their IDs?
3. Who is the top-certified employee in terms of aircraft certificates and what are their salary and name?
4. How can we determine the employee with the highest number of aircraft certificates and retrieve their salary and name?
5. What are the similarities and differences in finding employees with the most certifications for flying planes and for aircraft certificates in terms of SQL queries?

==

[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: Find the number of medications prescribed for each brand.
SQL query: SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand
2th pair
question: How many medications are prescribed for each brand?
SQL query: SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output
1. How does the number of medications prescribed vary across different brands?
2. What is the distribution of medications prescribed among different brands?
3. What insights can be gathered by analyzing the count of medications prescribed for each brand?
4. How can the relationship between medication count and brand be utilized for decision-making processes?
5. What patterns can be identified by examining the prescription counts for each medication brand?

==

[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: What are the manager's first name, last name and id who won the most manager award?
SQL query: SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;
2th pair
question: Which manager won the most manager award? Give me the manager's first name, last name and id.
SQL query: SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output

1. What are the criteria for determining the manager who won the most manager awards, and how are they reflected in the corresponding SQL query?
2. Can we identify any specific patterns or trends in the distribution of manager awards among different managers based on the SQL query provided?
3. How does the SQL query leverage the relationship between player and manager_award tables to retrieve information about the most awarded manager?
4. In what ways does the SQL query prioritize the retrieval of the manager's first name, last name, and ID who has won the most manager awards?
5. What insights can be gained from analyzing the SQL query in terms of understanding the performance and accomplishments of managers in the dataset?

==

[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: What is the first name of students who got grade C in any class?
SQL query: SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'
2th pair
question: What are the first names of all students who got a grade C in a class?
SQL query: SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'
3th pair
question: Find names of all students who took some course and got A or C.
SQL query: SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'
4th pair
question: What are the names of all students taking a course who received an A or C?
SQL query: SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'
5th pair
question: What is the last name of the student who got a grade A in the class with code 10018.
SQL query: SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018
6th pair
question: What is the last name of the student who received an A in the class with the code 10018?
SQL query: SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output
1. Identify students who achieved a specific grade in any class and retrieve their first names.
2. Retrieve the first names of all students who obtained a grade of C in any class.
3. Find the names of students who took courses and received either an A or C grade.
4. Explore the names of students currently enrolled in a course and who were graded with an A or C.
5. Determine the last name of a student who attained a grade of A in a particular class identified by its code.

==

[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: Show the names of pilots and the number of records they have.
SQL query: SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name
2th pair
question: Show names of pilots that have more than one record.
SQL query: SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1
3th pair
question: List the names of pilots that do not have any record.
SQL query: SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output
1. How can pilot names and the number of records they have be displayed in a single query?
2. What is the query to show the names of pilots who have more than one record in the database?
3. How can the names of pilots who do not have any record in the database be listed efficiently?
4. What SQL query can be used to retrieve the names of pilots along with the count of their records and filter out those with more than one record?
5. Is there a way to list the names of pilots who do not have any associated record in a single query rather than using subqueries?

==

[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: What is the invoice number and invoice date for the invoice with most number of transactions?
SQL query: SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1
2th pair
question: What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?
SQL query: SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output

1. What are the characteristics of the invoice with the highest number of transactions, such as its number and date?
2. How do the invoice number and date of the invoice with the most transactions relate to the financial transactions table?
3. What insights can be gained from analyzing the invoice data for invoices with the greatest number of transactions in terms of financial transactions?
4. In what ways does the count of transactions for each invoice impact the retrieval of invoice numbers and dates from the database?
5. How can understanding the relationship between invoice numbers, dates, and transaction counts contribute to better financial analysis and decision-making?

==

[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: Find the name and salary of the instructors who are advisors of any student from History department?
SQL query: SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'
2th pair
question: What are the names and salaries of instructors who advises students in the History department?
SQL query: SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'
3th pair
question: Find the name and salary of instructors who are advisors of the students from the Math department.
SQL query: SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'
4th pair
question: What are the names and salaries of instructors who advise students in the Math department?
SQL query: SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'
5th pair
question: Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.
SQL query: SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred
6th pair
question: What are the names of all instructors who advise students in the math depart sorted by total credits of the student.
SQL query: SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred
7th pair
question: Find the name of instructor who is the advisor of the student who has the highest number of total credits.
SQL query: SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1
8th pair
question: What is the name of the instructor who advises the student with the greatest number of total credits?
SQL query: SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output
1. What is the role of instructors in advising students in different departments and how does their salary vary based on their advisory responsibilities?
2. How can we identify instructors advising students in specific departments and what are their names and salaries in those cases?
3. How does the advisory role of instructors differ across departments, particularly focusing on the Math department, and what are the associated salary details?
4. In what ways can we sort and filter the list of instructors who are advisors of students in specific departments based on student attributes such as total credit?
5. Who is the instructor amongst all advisors that advises the student with the highest total credits, and what is their name and role in the advisory process?

==

[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: Which contact channel has been used by the customer with name "Tillman Ernser"?
SQL query: SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  "Tillman Ernser"
2th pair
question: Find the contact channel code that was used by the customer named "Tillman Ernser".
SQL query: SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  "Tillman Ernser"
3th pair
question: What is the "active to date" of the latest contact channel used by "Tillman Ernser"?
SQL query: SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  "Tillman Ernser"
4th pair
question: Return the the "active to date" of the latest contact channel used by the customer named "Tillman Ernser".
SQL query: SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  "Tillman Ernser"
5th pair
question: Find the name and active date of the customer that use email as the contact channel.
SQL query: SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'
6th pair
question: What are the name and active date of the customers whose contact channel code is email?
SQL query: SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output
1. What contact channel has been utilized by the customer named "Tillman Ernser", and what is the active timeframe associated with it?
2. Among the contact channels used by the customer "Tillman Ernser", which one was the latest and what was its active date range?
3. How can we determine the most recent active date of the contact channel utilized by "Tillman Ernser"?
4. For customers who communicate via email, what are their names and the dates when they started using this contact channel?
5. Which customers have email as their contact channel and what are their corresponding active dates?

==

[System prompt]
You are an expert at analyzing text-to-SQL dataset. For given question and corresponding SQL query pairs, Your task is to generate five high-level questions that can cover various aspects of gold tables set. Your output should be five comprehensive and fluent sentences. You should focus on relationships between each question and SQL query.

For given question-SQL query pairs, follow these steps:
1. Analyze the aspects of each question and corresponding SQL query pair. Pull out the key points.
2. Group the key points drawn for each question-SQL query pair into high-level topics by combining similar aspects.
3. Generate five high-level questions by properly combining high-level topics.

Please sure that the generated question stop at simply listing a number of simple questions. Instead, generate a high-level question that aggregates simple questions.

[User prompt]
Here is question and its corresponding SQL query pairs. Please generate a list of high-level questions.

## Input
1th pair
question: List the top 5 genres by number of tracks. List genres name and total tracks.
SQL query: SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;
2th pair
question: How many tracks does each genre have and what are the names of the top 5?
SQL query: SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;
3th pair
question: What is the name of tracks whose genre is Rock?
SQL query: SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock";
4th pair
question: What is the name of all tracks in the Rock genre?
SQL query: SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock";
5th pair
question: List the name of tracks belongs to genre Rock or genre Jazz.
SQL query: SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock" OR T1.name = "Jazz"
6th pair
question: What are the names of the tracks that are Rock or Jazz songs?
SQL query: SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock" OR T1.name = "Jazz"
7th pair
question: Find number of tracks in each genre?
SQL query: SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;
8th pair
question: How many tracks are in each genre?
SQL query: SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;

Output should follow the next template.
## Output template
1. [high-level question 1]
2. [high-level question 2]
3. [high-level question 3]
4. [high-level question 4]
5. [high-level question 5]

[Response]
## Output
1. What are the top 5 genres by number of tracks and the total count per genre?
2. How many tracks does each genre have and what are the names of the top 5 genres?
3. Which tracks have the genre "Rock" associated with them?
4. What are the names of all tracks that belong to the genre "Rock"?
5. Can you list the names of tracks that belong to either the "Rock" or "Jazz" genres?

==

