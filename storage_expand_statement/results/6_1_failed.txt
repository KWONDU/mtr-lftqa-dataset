# Table information

metadata: List of Intel Pentium Dual-Core microprocessors | ,   (65 nm) | ,   (65 nm)
full table:
Model_number            | sSpec_number                         | Frequency | L2_cache | Mult_ | Voltage      | Socket  | Release_date     | Part_numbers   | Release_price_USD_
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Pentium Dual-Core E2140 | SLA3J(L2)SLA93(M0)SLALS(G0)          | 1.6 GHz   | 1 MB     | 8×    | 1.162–1.312V | LGA 775 | June 3, 2007     | HH80557PG0251M | $74               
Pentium Dual-Core E2160 | SLA3H(L2)SLA8Z(M0)SLA9Z(G0)SLASX(G0) | 1.8 GHz   | 1 MB     | 9×    | 1.162–1.312V | LGA 775 | June 3, 2007     | HH80557PG0331M | $84               
Pentium Dual-Core E2180 | SLA8Y(M0)                            | 2 GHz     | 1 MB     | 10×   | 0.85–1.50V   | LGA 775 | August 26, 2007  | HH80557PG0411M | $84               
Pentium Dual-Core E2200 | SLA8X(M0)                            | 2.2 GHz   | 1 MB     | 11×   | 0.85–1.50V   | LGA 775 | December 2, 2007 | HH80557PG0491M | $84               
Pentium Dual-Core E2220 | SLA8W(M0)                            | 2.4 GHz   | 1 MB     | 12×   | 0.85–1.50V   | LGA 775 | March 2, 2008    | HH80557PG0561M | $84               

# Statement
The voltage for Intel Pentium dual-core microprocessors E2140 in (65nm) is 1.162–1.312V.

# Response
```python
import pandas as pd

def expand_statement_pattern(df):
    statement_pattern = "The voltage for Intel Pentium dual-core microprocessors {model} in {nm} is {voltage}."
    expanded_statement_list = []

    for index, row in df.iterrows():
        model = row['Model_number']
        nm = row['Caption'].split(' | ')[1].strip('()')
        voltage = row['Voltage']
        expanded_statement = statement_pattern.format(model=model, nm=nm, voltage=voltage)
        expanded_statement_list.append(expanded_statement)

    return statement_pattern, expanded_statement_list
```

# Exception
Traceback (most recent call last):
  File "/home/go203302/.local/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 3805, in get_loc
    return self._engine.get_loc(casted_key)
  File "index.pyx", line 167, in pandas._libs.index.IndexEngine.get_loc
  File "index.pyx", line 196, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'Caption'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/work/go203302/mtr-lftqa-dataset/expand_statement.py", line 136, in <module>
    statement_pattern, expanded_statement_list = expand_statement_pattern(
  File "<string>", line 9, in expand_statement_pattern
  File "/home/go203302/.local/lib/python3.10/site-packages/pandas/core/series.py", line 1121, in __getitem__
    return self._get_value(key)
  File "/home/go203302/.local/lib/python3.10/site-packages/pandas/core/series.py", line 1237, in _get_value
    loc = self.index.get_loc(label)
  File "/home/go203302/.local/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 3812, in get_loc
    raise KeyError(key) from err
KeyError: 'Caption'

