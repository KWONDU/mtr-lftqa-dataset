# Table information

metadata: 2005 Time Warner Cable Road Runner 225 | Race | Race
full table:
Driver             | Team                    | Laps | Time_Retired | Grid | Points
----------------------------------------------------------------------------------
Paul Tracy         | Forsythe Racing         | 221  | 1:45:01.259  | 5    | 33    
A. J. Allmendinger | RuSPORT                 | 221  | +3.370 secs  | 2    | 27    
Oriol Servià       | Newman/Haas Racing      | 221  | +6.121 secs  | 9    | 25    
Justin Wilson      | RuSPORT                 | 221  | +6.859 secs  | 3    | 23    
Jimmy Vasser       | PKV Racing              | 221  | +8.332 secs  | 1    | 23    
Sébastien Bourdais | Newman/Haas Racing      | 220  | + 1 Lap      | 6    | 19    
Mario Domínguez    | Forsythe Racing         | 220  | + 1 Lap      | 10   | 18    
Ronnie Bremer      | HVM Racing              | 220  | + 1 Lap      | 16   | 17    
Timo Glock         | Rocketsports Racing     | 219  | + 2 Laps     | 14   | 13    
Alex Tagliani      | Team Australia          | 218  | + 3 Laps     | 11   | 11    
Cristiano da Matta | PKV Racing              | 217  | + 4 Laps     | 4    | 10    
Nelson Philippe    | Mi-Jack Conquest Racing | 216  | + 5 Laps     | 12   | 9     
Marcus Marshall    | Team Australia          | 216  | + 5 Laps     | 15   | 8     
Ricardo Sperafico  | Dale Coyne Racing       | 211  | + 10 Laps    | 17   | 7     
Björn Wirdheim     | HVM Racing              | 174  | Suspension   | 8    | 6     
Andrew Ranger      | Mi-Jack Conquest Racing | 125  | Contact      | 13   | 5     
Ryan Hunter-Reay   | Rocketsports Racing     | 5    | Contact      | 7    | 4     

# Statement
In the 2005 Time Warner Cable Road Runner 225, the lap with the highest time/retirement of +3,370 seconds is lap 221.

# Response
```python
import pandas as pd

def expand_statement_pattern(df):
    statement_pattern = "In the {race_name}, the lap with the highest time/retirement of {time_difference} seconds is lap {lap_number}."
    expanded_statement_list = []

    df['Time_Retired'] = df['Time_Retired'].apply(lambda x: int(x.split(':')[0]) * 3600 + int(x.split(':')[1].split('.')[0]) * 60 + int(x.split(':')[1].split('.')[1]))

    max_time_difference = df['Time_Retired'].max()
    lap_number = df[df['Time_Retired'] == max_time_difference]['Laps'].values[0]

    time_difference = max_time_difference + 3370

    expanded_statement = statement_pattern.format(race_name=df['Race'].iloc[0], time_difference=time_difference, lap_number=lap_number)
    expanded_statement_list.append(expanded_statement)

    return statement_pattern, expanded_statement_list
```

# Exception
Traceback (most recent call last):
  File "/work/go203302/mtr-lftqa-dataset/expand_statement.py", line 136, in <module>
    statement_pattern, expanded_statement_list = expand_statement_pattern(
  File "<string>", line 7, in expand_statement_pattern
  File "/home/go203302/.local/lib/python3.10/site-packages/pandas/core/series.py", line 4924, in apply
    ).apply()
  File "/home/go203302/.local/lib/python3.10/site-packages/pandas/core/apply.py", line 1427, in apply
    return self.apply_standard()
  File "/home/go203302/.local/lib/python3.10/site-packages/pandas/core/apply.py", line 1507, in apply_standard
    mapped = obj._map_values(
  File "/home/go203302/.local/lib/python3.10/site-packages/pandas/core/base.py", line 921, in _map_values
    return algorithms.map_array(arr, mapper, na_action=na_action, convert=convert)
  File "/home/go203302/.local/lib/python3.10/site-packages/pandas/core/algorithms.py", line 1743, in map_array
    return lib.map_infer(values, mapper, convert=convert)
  File "lib.pyx", line 2972, in pandas._libs.lib.map_infer
  File "<string>", line 7, in <lambda>
IndexError: list index out of range

