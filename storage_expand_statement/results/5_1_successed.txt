# Table information

metadata: 1988 African Cup of Champions Clubs | Preliminary round | Preliminary round
full table:
Team_1            | Agg_ | Team_2               | _1st_leg | _2nd_leg
---------------------------------------------------------------------
Manzini Wanderers | 6-1  | Township Rollers     | 2-0      | 4-1     
CD Elá Nguema     | 0-5  | Etoile du Congo      | 0-1      | 0-4     
Panthères Noires  | 2-3  | Wagad Mogadishu      | 2-2      | 0-1     
RL Defence Force  | 2-3  | Sunrise Flacq United | 2-0      | 0-3     
Sierra Fisheries  | 0-1  | AS Police            | 0-1      | 0-0     

# Statement
In 1988, during the African Cup of Champions Clubs, the first leg result when Team 2 Wagad Mogadishu was in the preliminary round was 2-2.

# Statement pattern
In 1988, during the African Cup of Champions Clubs, the first leg result when {team_2} was in the preliminary round was {result}.
# Expanded staetments
In 1988, during the African Cup of Champions Clubs, the first leg result when Township Rollers was in the preliminary round was 2-0.
In 1988, during the African Cup of Champions Clubs, the first leg result when Etoile du Congo was in the preliminary round was 0-1.
In 1988, during the African Cup of Champions Clubs, the first leg result when Wagad Mogadishu was in the preliminary round was 2-2.
In 1988, during the African Cup of Champions Clubs, the first leg result when Sunrise Flacq United was in the preliminary round was 2-0.
In 1988, during the African Cup of Champions Clubs, the first leg result when AS Police was in the preliminary round was 0-1.

# Python code
```python
import pandas as pd

def expand_statement_pattern(df):
    statement_pattern = "In 1988, during the African Cup of Champions Clubs, the first leg result when {team_2} was in the preliminary round was {result}."
    expanded_statement_list = []

    for index, row in df.iterrows():
        team_2 = row['Team_2']
        result = row['_1st_leg']
        expanded_statement = statement_pattern.format(team_2=team_2, result=result)
        expanded_statement_list.append(expanded_statement)

    return statement_pattern, expanded_statement_list
```
